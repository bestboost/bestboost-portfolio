import Feedback from "../models/feedbackSchema.js";
import sendEmail from "../utils/nodemailer.js";
import { config } from "../utils/config.js";

// –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –ø—Ä–∏–π–æ–º—É –¥–∞–Ω–∏—Ö –∑ —Ñ–æ—Ä–º–∏
const submitFeedback = async (req, res) => {
  try {
    const { name, email, message } = req.body;

    if (!name || !email || !message) {
      return res.status(400).json({ message: "–£—Å—ñ –ø–æ–ª—è –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤—ñ" });
    }

    // –ü—Ä–æ–±—É—î–º–æ –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –∞–¥–º—ñ–Ω—É
    try {
      await sendEmail({
        to: config.email,
        subject: "–ù–æ–≤–∏–π –∑–∞–ø–∏—Ç –∑ —Ñ–æ—Ä–º–∏ –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –∑–≤‚Äô—è–∑–∫—É",
        text: `–Ü–º'—è: ${name}\nEmail: ${email}\n–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: ${message}`,
      });
    } catch (adminError) {
      console.error("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –∞–¥–º—ñ–Ω—É:", adminError.message);
      return res.status(500).json({ message: "–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –ø—ñ–∑–Ω—ñ—à–µ." });
    }

    // –ü—Ä–æ–±—É—î–º–æ –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
    try {
      await sendEmail({
        to: email,
        subject: "–ú–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –≤–∞—à –∑–∞–ø–∏—Ç!",
        text: `–î—è–∫—É—î–º–æ, ${name}, –∑–∞ —Ç–µ, —â–æ –∑–≤‚Äô—è–∑–∞–ª–∏—Å—è –∑ –Ω–∞–º–∏! –ú–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –≤–∞—à –∑–∞–ø–∏—Ç —ñ –≤—ñ–¥–ø–æ–≤—ñ–º–æ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º.\n\n–í–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:\n"${message}"`,
      });
    } catch (userError) {
      console.error("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –∫–ª—ñ—î–Ω—Ç—É:", userError.message);
      return res.status(400).json({
        message: "–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –∑ –≤–∞—à–æ—é –∞–¥—Ä–µ—Å–æ—é. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ—Å—Ç—å email —ñ —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.",
      });
    }

    // –Ø–∫—â–æ –æ–±–∏–¥–≤–∞ –ª–∏—Å—Ç–∏ –ø—Ä–æ–π—à–ª–∏ ‚Äî –∑–±–µ—Ä—ñ–≥–∞—î–º–æ —É –±–∞–∑—É
    const newFeedback = await Feedback.create({ name, email, message, emailSent: true });
    console.log("‚úÖ –ó–±–µ—Ä–µ–∂–µ–Ω–æ —É –±–∞–∑—É:", newFeedback);

    return res.status(201).json({ message: "–ó–∞–ø–∏—Ç —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ —Ç–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–æ!" });
  } catch (error) {
    console.error("üî• –ó–∞–≥–∞–ª—å–Ω–∞ –ø–æ–º–∏–ª–∫–∞:", error.message);
    return res.status(500).json({ message: "–©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –ø—ñ–∑–Ω—ñ—à–µ." });
  }
};


export default submitFeedback;
