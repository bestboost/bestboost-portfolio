{"ast":null,"code":"var _jsxFileName = \"/Users/elenachyzyk/bestboost-portfolio/client/src/components/Certificates/Certificates.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport PdfThumbnail from \"./PdfThumbnail\";\nimport ModalCertificates from \"./ModalCertificates\";\nimport { CertificatesTitle, CertificatesContainer, CertificateItem, CertificateTitle, DownloadLink, CertificateImage\n// ModalOverlay,\n// ModalContent,\n// CloseButton,\n} from \"./Certificates.styled\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Certificates = () => {\n  _s();\n  const [certificates, setCertificates] = useState([]);\n  const [selectedCertificate, setSelectedCertificate] = useState(null);\n  useEffect(() => {\n    fetchCertificates();\n  }, []);\n  const fetchCertificates = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/api/certificates/list\");\n      setCertificates(response.data);\n    } catch (error) {\n      console.error(\"Помилка при отриманні сертифікатів:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CertificatesTitle, {\n      children: \"Certificates\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CertificatesContainer, {\n      children: (certificates || []).map(cert => {\n        var _cert$contentType;\n        return /*#__PURE__*/_jsxDEV(CertificateItem, {\n          children: [(_cert$contentType = cert.contentType) !== null && _cert$contentType !== void 0 && _cert$contentType.startsWith(\"image\") ? /*#__PURE__*/_jsxDEV(CertificateImage, {\n            src: `http://localhost:5000/api/certificates/download/${cert._id}`,\n            alt: \"\\u0421\\u0435\\u0440\\u0442\\u0438\\u0444\\u0456\\u043A\\u0430\\u0442\",\n            onClick: () => setSelectedCertificate(cert)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(PdfThumbnail, {\n            url: `http://localhost:5000/api/certificates/download/${cert._id}`,\n            alt: \"\\u0421\\u0435\\u0440\\u0442\\u0438\\u0444\\u0456\\u043A\\u0430\\u0442\",\n            onClick: () => setSelectedCertificate(cert)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CertificateTitle, {\n            children: cert.filename\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DownloadLink, {\n            href: `http://localhost:5000/api/certificates/download/${cert._id}`,\n            download: true,\n            children: \"Download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, cert._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), selectedCertificate && /*#__PURE__*/_jsxDEV(ModalCertificates, {\n      onClick: () => setSelectedCertificate(null),\n      src: `http://localhost:5000/api/certificates/download/${selectedCertificate._id}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }, this)\n    // (\n    //   <ModalOverlay onClick={() => setSelectedCertificate(null)}>\n    //     <ModalContent onClick={(e) => e.stopPropagation()}>\n    //       <CloseButton onClick={() => setSelectedCertificate(null)}>\n    //         ✖\n    //       </CloseButton>\n    //       {selectedCertificate &&\n    //       selectedCertificate.contentType?.startsWith(\"image/\") ? (\n    //         <img\n    //           src={`http://localhost:5000/api/certificates/download/${selectedCertificate._id}`}\n    //           alt=\"Сертифікат\"\n    //           style={{ width: \"100%\" }}\n    //         />\n    //       ) : (\n    //         <iframe\n    //           src={`http://localhost:5000/api/certificates/download/${selectedCertificate._id}`}\n    //           width=\"100%\"\n    //           height=\"500px\"\n    //         />\n    //       )}\n    //     </ModalContent>\n    //   </ModalOverlay>\n    // )\n    ]\n  }, void 0, true);\n};\n_s(Certificates, \"Vy3WmbbgG6EI+ky2qe3sq+4PbpI=\");\n_c = Certificates;\nexport default Certificates;\nvar _c;\n$RefreshReg$(_c, \"Certificates\");","map":{"version":3,"names":["React","useState","useEffect","axios","PdfThumbnail","ModalCertificates","CertificatesTitle","CertificatesContainer","CertificateItem","CertificateTitle","DownloadLink","CertificateImage","jsxDEV","_jsxDEV","Fragment","_Fragment","Certificates","_s","certificates","setCertificates","selectedCertificate","setSelectedCertificate","fetchCertificates","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","cert","_cert$contentType","contentType","startsWith","src","_id","alt","onClick","url","filename","href","download","_c","$RefreshReg$"],"sources":["/Users/elenachyzyk/bestboost-portfolio/client/src/components/Certificates/Certificates.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport PdfThumbnail from \"./PdfThumbnail\";\nimport ModalCertificates from \"./ModalCertificates\";\nimport {\n  CertificatesTitle,\n  CertificatesContainer,\n  CertificateItem,\n  CertificateTitle,\n  DownloadLink,\n  CertificateImage,\n  // ModalOverlay,\n  // ModalContent,\n  // CloseButton,\n} from \"./Certificates.styled\";\n\nconst Certificates = () => {\n  const [certificates, setCertificates] = useState([]);\n  const [selectedCertificate, setSelectedCertificate] = useState(null);\n\n  useEffect(() => {\n    fetchCertificates();\n  }, []);\n\n  const fetchCertificates = async () => {\n    try {\n      const response = await axios.get(\n        \"http://localhost:5000/api/certificates/list\"\n      );\n      setCertificates(response.data);\n    } catch (error) {\n      console.error(\"Помилка при отриманні сертифікатів:\", error);\n    }\n  };\n\n  return (\n    <>\n      <CertificatesTitle>Certificates</CertificatesTitle>\n      <CertificatesContainer>\n        {(certificates || []).map((cert) => (\n          <CertificateItem key={cert._id}>\n            {cert.contentType?.startsWith(\"image\") ? (\n              <CertificateImage\n                src={`http://localhost:5000/api/certificates/download/${cert._id}`}\n                alt=\"Сертифікат\"\n                onClick={() => setSelectedCertificate(cert)}\n              />\n            ) : (\n              <PdfThumbnail\n                url={`http://localhost:5000/api/certificates/download/${cert._id}`}\n                alt=\"Сертифікат\"\n                onClick={() => setSelectedCertificate(cert)}\n              />\n            )}\n            <CertificateTitle>{cert.filename}</CertificateTitle>\n            <DownloadLink\n              href={`http://localhost:5000/api/certificates/download/${cert._id}`}\n              download\n            >\n              Download\n            </DownloadLink>\n          </CertificateItem>\n        ))}\n      </CertificatesContainer>\n\n      {\n        selectedCertificate && (\n          <ModalCertificates\n            onClick={() => setSelectedCertificate(null)}\n            src={`http://localhost:5000/api/certificates/download/${selectedCertificate._id}`}\n          />\n        )\n        // (\n        //   <ModalOverlay onClick={() => setSelectedCertificate(null)}>\n        //     <ModalContent onClick={(e) => e.stopPropagation()}>\n        //       <CloseButton onClick={() => setSelectedCertificate(null)}>\n        //         ✖\n        //       </CloseButton>\n        //       {selectedCertificate &&\n        //       selectedCertificate.contentType?.startsWith(\"image/\") ? (\n        //         <img\n        //           src={`http://localhost:5000/api/certificates/download/${selectedCertificate._id}`}\n        //           alt=\"Сертифікат\"\n        //           style={{ width: \"100%\" }}\n        //         />\n        //       ) : (\n        //         <iframe\n        //           src={`http://localhost:5000/api/certificates/download/${selectedCertificate._id}`}\n        //           width=\"100%\"\n        //           height=\"500px\"\n        //         />\n        //       )}\n        //     </ModalContent>\n        //   </ModalOverlay>\n        // )\n      }\n    </>\n  );\n};\n\nexport default Certificates;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}